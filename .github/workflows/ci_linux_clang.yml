name: CI Linux/Clang

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu 20.04 Clang 10",
            os: ubuntu-20.04,
            build_type: Debug,
            cc: "clang-10", cxx: "clang++-10"
          }
          - {
            name: "Ubuntu 20.04 Clang 11",
            os: ubuntu-20.04,
            build_type: Debug,
            cc: "clang-11", cxx: "clang++-11"
          }
          - {
            name: "Ubuntu 20.04 Clang 12",
            os: ubuntu-20.04,
            build_type: Debug,
            cc: "clang-12", cxx: "clang++-12"
          }
          - {
            name: "Ubuntu 22.04 Clang 13",
            os: ubuntu-22.04,
            build_type: Debug,
            cc: "clang-13", cxx: "clang++-13"
          }
          - {
            name: "Ubuntu 22.04 Clang 14 C++11",
            os: ubuntu-22.04,
            build_type: Debug,
            cc: "clang-14", cxx: "clang++-14",
            cxx_standard: 11
          }
          - {
            name: "Ubuntu 22.04 Clang 14 C++14",
            os: ubuntu-22.04,
            build_type: Debug,
            cc: "clang-14", cxx: "clang++-14",
            cxx_standard: 14
          }
          - {
            name: "Ubuntu 22.04 Clang 14 C++17",
            os: ubuntu-22.04,
            build_type: Debug,
            cc: "clang-14", cxx: "clang++-14",
            cxx_standard: 17
          }
          - {
            name: "Ubuntu 22.04 Clang 14 C++20",
            os: ubuntu-22.04,
            build_type: Debug,
            cc: "clang-14", cxx: "clang++-14",
            cxx_standard: 20
          }
          - {
            name: "Ubuntu 22.04 Clang with sanitizers",
            os: ubuntu-22.04,
            build_type: Debug,
            cc: "clang", cxx: "clang++",
            enable_sanitizers_in_tests: ON
          }
    steps:
      - uses: actions/checkout@v3
      - name: Build project
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -DENABLE_TESTING=ON \
            -DOVERRIDE_CXX_STANDARD_FOR_TESTS=${{ matrix.config.cxx_standard }} \
            -DENABLE_SANITIZERS_IN_TESTS=${{ matrix.config.enable_sanitizers_in_tests }}
          cmake --build build -j
      - name: Run tests
        run: |
          ctest --test-dir build/ --verbose
